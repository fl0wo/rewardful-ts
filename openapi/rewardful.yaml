openapi: 3.0.0
info:
  version: 1.0.0
  title: Rewardful API
  description: Rewardful API Documentation
servers:
  - url: v1
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Affiliate:
      type: object
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        state:
          type: string
          enum:
            - active
            - inactive
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        confirmed_at:
          type: string
          nullable: true
          format: date-time
        paypal_email:
          type: string
          nullable: true
          format: email
        paypal_email_confirmed_at:
          type: string
          nullable: true
          format: date-time
        wise_email:
          type: string
          nullable: true
          format: email
        wise_email_confirmed_at:
          type: string
          nullable: true
          format: date-time
        receive_new_commission_notifications:
          type: boolean
        sign_in_count:
          type: number
        unconfirmed_email:
          type: string
          nullable: true
          format: email
        stripe_customer_id:
          type: string
          nullable: true
        stripe_account_id:
          type: string
          nullable: true
        visitors:
          type: number
        leads:
          type: number
        conversions:
          type: number
        campaign:
          type: object
          properties:
            id:
              type: string
              format: uuid
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            name:
              type: string
          required:
            - id
            - created_at
            - updated_at
            - name
      required:
        - id
        - created_at
        - updated_at
        - state
        - first_name
        - last_name
        - email
        - confirmed_at
        - paypal_email
        - paypal_email_confirmed_at
        - wise_email
        - wise_email_confirmed_at
        - receive_new_commission_notifications
        - sign_in_count
        - unconfirmed_email
        - stripe_customer_id
        - stripe_account_id
        - visitors
        - leads
        - conversions
    AffiliateLink:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier for the affiliate link.
          example: f46a912b-08bc-4332-8771-c857e11ad9dd
        url:
          type: string
          format: uri
          description: The URL associated with the affiliate link.
          example: https://www.demo.com:8081/?via=luke
        token:
          type: string
          description: The unique token for the affiliate link, usually a short identifier.
          example: luke
        visitors:
          type: integer
          description: The number of visitors who have used this affiliate link.
          example: 10
        leads:
          type: integer
          description: The number of leads generated by this affiliate link.
          example: 5
        conversions:
          type: integer
          description: The number of conversions generated by this affiliate link.
          example: 3
        affiliate_id:
          type: string
          format: uuid
          description: The ID of the affiliate associated with this link.
          example: aaac9869-4242-4db9-afb1-f3518ef627c5
      required:
        - id
        - url
        - token
        - visitors
        - leads
        - conversions
        - affiliate_id
    AffiliateCoupon:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier for the affiliate coupon.
          example: 75434e84-255b-4314-a278-820df5e76813
        external_id:
          type: string
          description: The external ID associated with the affiliate coupon, often used as
            a reference ID.
          example: promo_1a2b3c
        token:
          type: string
          description: The unique token or code for the affiliate coupon.
          example: CODE
        leads:
          type: integer
          description: The number of leads generated by this coupon.
          example: 0
        conversions:
          type: integer
          description: The number of conversions generated by this coupon.
          example: 0
        affiliate_id:
          type: string
          format: uuid
          description: The ID of the affiliate associated with this coupon.
          example: 95d48f70-f1d4-42d9-b929-21996b6d9eb4
      required:
        - id
        - external_id
        - token
        - leads
        - conversions
        - affiliate_id
    Link:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: eb844960-6c42-4a3b-8009-f588a42d8506
        url:
          type: string
          format: uri
          example: http://www.example.com/?via=adam
        token:
          type: string
          example: adam
        visitors:
          type: integer
          example: 100
        leads:
          type: integer
          example: 42
        conversions:
          type: integer
          example: 18
      required:
        - id
        - url
        - token
        - visitors
        - leads
        - conversions
    Customer:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the customer on the platform.
          example: cus_ABC123
        name:
          type: string
          description: The customer's full name.
          example: Fred Durst
        email:
          type: string
          format: email
          description: The customer's email address.
          example: fred@example.com
        platform:
          type: string
          description: The platform associated with this customer (e.g., Stripe).
          example: stripe
      required:
        - id
        - name
        - email
        - platform
    ReferralSchema:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier for the referral.
          example: e523da29-6157-4aac-b4b5-05b3b7b14fb6
        link:
          $ref: "#/components/schemas/Link"
        visits:
          type: integer
          description: The number of visits generated by the referral.
          example: 42
        customer:
          $ref: "#/components/schemas/Customer"
        affiliate:
          $ref: "#/components/schemas/Affiliate"
        created_at:
          type: string
          format: date-time
          description: Timestamp when the referral was created.
          example: 2020-04-27T00:34:28.448Z
        became_lead_at:
          type: string
          nullable: true
          format: date-time
          description: Timestamp when the referral became a lead.
          example: 2020-04-27T00:36:28.448Z
        became_conversion_at:
          type: string
          nullable: true
          format: date-time
          description: Timestamp when the referral became a conversion.
          example: 2020-04-27T00:38:28.448Z
        expires_at:
          type: string
          nullable: true
          format: date-time
          description: Expiration timestamp of the referral.
          example: 2020-06-26T00:34:28.448Z
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the referral was last updated.
          example: 2020-04-27T00:38:28.448Z
        deactivated_at:
          type: string
          nullable: true
          format: date-time
          description: Timestamp when the referral was deactivated, if applicable.
        conversion_state:
          type: string
          enum: &a1
            - conversion
            - lead
            - visitor
          description: The current state of the referral, indicating if it is a
            conversion, lead, or visitor.
          example: conversion
        stripe_account_id:
          type: string
          nullable: true
          description: The Stripe account ID associated with the referral.
          example: acct_ABC123
        stripe_customer_id:
          type: string
          nullable: true
          description: The Stripe customer ID associated with the referral.
          example: cus_ABC123
      required:
        - id
        - link
        - visits
        - customer
        - affiliate
        - created_at
        - became_lead_at
        - became_conversion_at
        - expires_at
        - updated_at
        - deactivated_at
        - conversion_state
        - stripe_account_id
        - stripe_customer_id
    Campaign:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier of the campaign.
          example: ceaef6d9-767e-49aa-a6ab-46c02aa79604
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
          example: 2021-11-24T06:31:06.672Z
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp
          example: 2022-02-22T23:17:55.119Z
        name:
          type: string
          description: Campaign name
          example: Best Friends of Rewardful
        url:
          type: string
          format: uri
          description: Campaign URL
          example: https://rewardful.com/
        private:
          type: boolean
          description: Private campaign flag
          example: false
        private_tokens:
          type: boolean
          nullable: true
          description: Private tokens flag
          example: false
        commission_amount_cents:
          type: number
          nullable: true
          description: Fixed commission amount in cents
        commission_amount_currency:
          type: string
          nullable: true
          description: Commission amount currency
        minimum_payout_cents:
          type: number
          nullable: true
          description: Minimum payout in cents
          example: 0
        max_commission_period_months:
          type: number
          nullable: true
          description: Maximum commission period in months
        max_commissions:
          type: number
          nullable: true
          description: Maximum number of commissions
        days_before_referrals_expire:
          type: number
          nullable: true
          description: Days until referral expiration
          example: 30
        days_until_commissions_are_due:
          type: number
          nullable: true
          description: Days until commission due date
          example: 30
        affiliate_dashboard_text:
          type: string
          nullable: true
          description: Dashboard text for affiliates
          example: ""
        custom_reward_description:
          type: string
          nullable: true
          description: Custom reward description
          example: ""
        welcome_text:
          type: string
          nullable: true
          description: Welcome message
          example: ""
        customers_visible_to_affiliates:
          type: boolean
          nullable: true
          description: Customer visibility flag
          example: false
        sale_description_visible_to_affiliates:
          type: boolean
          nullable: true
          description: Sale description visibility flag
          example: true
        parameter_type:
          type: string
          nullable: true
          enum: &a2
            - query
            - hash
            - path
          description: Parameter type
          example: query
        stripe_coupon_id:
          type: string
          nullable: true
          description: Stripe coupon ID
          example: jo45MTj3
        default:
          type: boolean
          nullable: true
          description: Default campaign flag
          example: false
        reward_type:
          type: string
          enum: &a3
            - percent
            - amount
          description: Reward type
          example: percent
        commission_percent:
          type: number
          nullable: true
          description: Commission percentage
          example: 30
        minimum_payout_currency:
          type: string
          nullable: true
          description: Minimum payout currency
          example: USD
        visitors:
          type: number
          nullable: true
          description: Visitor count
          example: 150
        leads:
          type: number
          nullable: true
          description: Lead count
          example: 39
        conversions:
          type: number
          nullable: true
          description: Conversion count
          example: 7
        affiliates:
          type: number
          nullable: true
          description: Affiliate count
          example: 12
    Referral:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier for the referral.
          example: e523da29-6157-4aac-b4b5-05b3b7b14fb6
        link:
          $ref: "#/components/schemas/Link"
        visits:
          type: integer
          description: The number of visits generated by the referral.
          example: 42
        customer:
          $ref: "#/components/schemas/Customer"
        affiliate:
          $ref: "#/components/schemas/Affiliate"
        created_at:
          type: string
          format: date-time
          description: Timestamp when the referral was created.
          example: 2020-04-27T00:34:28.448Z
        became_lead_at:
          type: string
          nullable: true
          format: date-time
          description: Timestamp when the referral became a lead.
          example: 2020-04-27T00:36:28.448Z
        became_conversion_at:
          type: string
          nullable: true
          format: date-time
          description: Timestamp when the referral became a conversion.
          example: 2020-04-27T00:38:28.448Z
        expires_at:
          type: string
          nullable: true
          format: date-time
          description: Expiration timestamp of the referral.
          example: 2020-06-26T00:34:28.448Z
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the referral was last updated.
          example: 2020-04-27T00:38:28.448Z
        deactivated_at:
          type: string
          nullable: true
          format: date-time
          description: Timestamp when the referral was deactivated, if applicable.
        conversion_state:
          type: string
          enum: *a1
          description: The current state of the referral, indicating if it is a
            conversion, lead, or visitor.
          example: conversion
        stripe_account_id:
          type: string
          nullable: true
          description: The Stripe account ID associated with the referral.
          example: acct_ABC123
        stripe_customer_id:
          type: string
          nullable: true
          description: The Stripe customer ID associated with the referral.
          example: cus_ABC123
      required:
        - id
        - link
        - visits
        - customer
        - affiliate
        - created_at
        - became_lead_at
        - became_conversion_at
        - expires_at
        - updated_at
        - deactivated_at
        - conversion_state
        - stripe_account_id
        - stripe_customer_id
    Sale:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier for the sale.
          example: 74e37d3b-03c5-4bfc-841c-a79d5799551a
        currency:
          type: string
          description: The currency used for the sale.
          example: USD
        charged_at:
          type: string
          format: date-time
          description: Timestamp when the sale was charged.
          example: 2020-08-19T16:28:25.000Z
        stripe_account_id:
          type: string
          nullable: true
          description: The Stripe account ID associated with the sale.
          example: acct_ABC123
        stripe_charge_id:
          type: string
          nullable: true
          description: The Stripe charge ID associated with the sale.
          example: ch_ABC123
        invoiced_at:
          type: string
          nullable: true
          format: date-time
          description: Timestamp when the sale was invoiced.
          example: 2020-08-19T16:28:25.000Z
        created_at:
          type: string
          format: date-time
          description: Timestamp when the sale was created.
          example: 2020-08-19T16:28:31.102Z
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the sale was last updated.
          example: 2020-08-19T16:28:31.102Z
        charge_amount_cents:
          type: integer
          description: The charged amount in cents.
          example: 10000
        refund_amount_cents:
          type: integer
          description: The refunded amount in cents.
          example: 0
        tax_amount_cents:
          type: integer
          description: The tax amount in cents.
          example: 0
        sale_amount_cents:
          type: integer
          description: The sale amount in cents.
          example: 10000
        referral:
          $ref: "#/components/schemas/Referral"
        affiliate:
          $ref: "#/components/schemas/Affiliate"
      required:
        - id
        - currency
        - charged_at
        - stripe_account_id
        - stripe_charge_id
        - invoiced_at
        - created_at
        - updated_at
        - charge_amount_cents
        - refund_amount_cents
        - tax_amount_cents
        - sale_amount_cents
        - referral
        - affiliate
    CommissionSchema:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier for the commission.
          example: 39e68c88-d84a-4510-b3b4-43c75016a080
        created_at:
          type: string
          format: date-time
          description: Timestamp when the commission was created.
          example: 2020-08-19T16:28:31.164Z
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the commission was last updated.
          example: 2020-08-19T16:28:31.164Z
        amount:
          type: integer
          description: The amount of the commission in cents.
          example: 3000
        currency:
          type: string
          description: The currency of the commission amount.
          example: USD
        due_at:
          type: string
          nullable: true
          format: date-time
          description: Timestamp when the commission is due.
          example: 2020-09-18T16:28:25.000Z
        paid_at:
          type: string
          nullable: true
          format: date-time
          description: Timestamp when the commission was paid.
        campaign:
          $ref: "#/components/schemas/Campaign"
        sale:
          $ref: "#/components/schemas/Sale"
      required:
        - id
        - created_at
        - updated_at
        - amount
        - currency
        - due_at
        - paid_at
        - campaign
        - sale
    CommissionItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier of the commission.
          example: 3a4a775c-b660-4d7f-a733-6f259a2646a7
        currency:
          type: string
          description: The currency of the commission amount.
          example: USD
        stripe_account_id:
          type: string
          nullable: true
          description: The Stripe account ID associated with the commission.
          example: acct_1GWIyRDLlKlZvFB2
        due_at:
          type: string
          nullable: true
          format: date-time
          description: Timestamp when the commission is due.
          example: 2022-07-31T15:55:19.000Z
        paid_at:
          type: string
          nullable: true
          format: date-time
          description: Timestamp when the commission was paid.
          example: 2022-08-08T09:07:11.242Z
        created_at:
          type: string
          format: date-time
          description: Timestamp when the commission was created.
          example: 2022-07-01T15:57:18.742Z
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the commission was last updated.
          example: 2022-07-01T15:57:18.742Z
        amount:
          type: integer
          description: The amount of the commission in cents.
          example: 1470
      required:
        - id
        - currency
        - stripe_account_id
        - due_at
        - paid_at
        - created_at
        - updated_at
        - amount
    PayoutSchema:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier of the payout.
          example: 3b03791a-3fb5-4bd6-8ec3-614c9fd978ca
        currency:
          type: string
          description: The currency of the payout.
          example: USD
        paid_at:
          type: string
          nullable: true
          format: date-time
          description: Timestamp when the payout was marked as paid.
          example: 2022-10-12T14:55:11.242Z
        state:
          type: string
          enum: &a4
            - paid
            - processing
            - completed
            - failed
          description: The current state of the payout.
          example: paid
        paid_by_id:
          type: string
          nullable: true
          format: uuid
          description: The ID of the user who marked the payout as paid, if applicable.
          example: 3e5c04ae-af80-4964-b280-23df034690d4
        created_at:
          type: string
          format: date-time
          description: Timestamp when the payout was created.
          example: 2022-10-12T14:54:52.148Z
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the payout was last updated.
          example: 2022-10-12T14:55:11.276Z
        amount:
          type: integer
          description: The amount of the payout in cents.
          example: 1470
        affiliate:
          $ref: "#/components/schemas/Affiliate"
        commissions:
          type: array
          items:
            $ref: "#/components/schemas/CommissionItem"
          description: List of commissions included in the payout.
      required:
        - id
        - currency
        - paid_at
        - state
        - paid_by_id
        - created_at
        - updated_at
        - amount
        - affiliate
        - commissions
    CampaignSchema:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier of the campaign.
          example: ceaef6d9-767e-49aa-a6ab-46c02aa79604
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
          example: 2021-11-24T06:31:06.672Z
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp
          example: 2022-02-22T23:17:55.119Z
        name:
          type: string
          description: Campaign name
          example: Best Friends of Rewardful
        url:
          type: string
          format: uri
          description: Campaign URL
          example: https://rewardful.com/
        private:
          type: boolean
          description: Private campaign flag
          example: false
        private_tokens:
          type: boolean
          nullable: true
          description: Private tokens flag
          example: false
        commission_amount_cents:
          type: number
          nullable: true
          description: Fixed commission amount in cents
        commission_amount_currency:
          type: string
          nullable: true
          description: Commission amount currency
        minimum_payout_cents:
          type: number
          nullable: true
          description: Minimum payout in cents
          example: 0
        max_commission_period_months:
          type: number
          nullable: true
          description: Maximum commission period in months
        max_commissions:
          type: number
          nullable: true
          description: Maximum number of commissions
        days_before_referrals_expire:
          type: number
          nullable: true
          description: Days until referral expiration
          example: 30
        days_until_commissions_are_due:
          type: number
          nullable: true
          description: Days until commission due date
          example: 30
        affiliate_dashboard_text:
          type: string
          nullable: true
          description: Dashboard text for affiliates
          example: ""
        custom_reward_description:
          type: string
          nullable: true
          description: Custom reward description
          example: ""
        welcome_text:
          type: string
          nullable: true
          description: Welcome message
          example: ""
        customers_visible_to_affiliates:
          type: boolean
          nullable: true
          description: Customer visibility flag
          example: false
        sale_description_visible_to_affiliates:
          type: boolean
          nullable: true
          description: Sale description visibility flag
          example: true
        parameter_type:
          type: string
          nullable: true
          enum: *a2
          description: Parameter type
          example: query
        stripe_coupon_id:
          type: string
          nullable: true
          description: Stripe coupon ID
          example: jo45MTj3
        default:
          type: boolean
          nullable: true
          description: Default campaign flag
          example: false
        reward_type:
          type: string
          enum: *a3
          description: Reward type
          example: percent
        commission_percent:
          type: number
          nullable: true
          description: Commission percentage
          example: 30
        minimum_payout_currency:
          type: string
          nullable: true
          description: Minimum payout currency
          example: USD
        visitors:
          type: number
          nullable: true
          description: Visitor count
          example: 150
        leads:
          type: number
          nullable: true
          description: Lead count
          example: 39
        conversions:
          type: number
          nullable: true
          description: Conversion count
          example: 7
        affiliates:
          type: number
          nullable: true
          description: Affiliate count
          example: 12
    Pagination:
      type: object
      properties:
        previous_page:
          type: number
          nullable: true
        current_page:
          type: number
          example: 1
        next_page:
          type: number
          nullable: true
          example: 2
        count:
          type: number
          example: 25
        limit:
          type: number
          example: 25
        total_pages:
          type: number
          example: 141
        total_count:
          type: number
          example: 3525
      required:
        - previous_page
        - current_page
        - next_page
        - count
        - limit
        - total_pages
        - total_count
    ListAllAffiliatesResponse:
      type: object
      properties:
        pagination:
          $ref: "#/components/schemas/Pagination"
        data:
          type: array
          items:
            $ref: "#/components/schemas/Affiliate"
          description: List of affiliates
      required:
        - pagination
        - data
    CreateAffiliateRequest:
      type: object
      properties:
        first_name:
          type: string
          description: First name of the affiliate
          example: James
        last_name:
          type: string
          description: Last name of the affiliate
          example: Bond
        email:
          type: string
          format: email
          description: Email address of the affiliate
          example: jb007@mi6.co.uk
        token:
          type: string
          description: Unique identifier or token for the affiliate
          example: jb007
        stripe_customer_id:
          type: string
          description: Stripe customer ID associated with the affiliate
          example: cus_ABC123
      required:
        - first_name
        - last_name
        - email
    UpdateAffiliateRequest:
      type: object
      properties:
        first_name:
          type: string
          description: First name of the affiliate
          example: Jamie
        last_name:
          type: string
          description: Last name of the affiliate
          example: Bond
        email:
          type: string
          format: email
          description: Email address of the affiliate
          example: james.bond@mi6.co.uk
        token:
          type: string
          description: Unique identifier or token for the affiliate
          example: jb007
        stripe_customer_id:
          type: string
          description: Stripe customer ID associated with the affiliate
          example: cus_ABC123
    SSO:
      type: object
      properties:
        url:
          type: string
          format: uri
          description: URL for the SSO login link for the affiliate
          example: https://affiliates.example.com/sso?token=eyJhbGciOiJIUzI1NiJ9
        expires:
          type: string
          format: date-time
          description: Expiration timestamp of the SSO link
          example: 2020-08-28T05:32:02.471Z
      required:
        - url
        - expires
    AffiliateBasic:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Affiliate ID
          example: d049c0c6-5caf-440e-a774-8d5e87086d0b
        email:
          type: string
          format: email
          description: Email address of the affiliate
          example: jason@example.com
      required:
        - id
        - email
    MagicLinkResponse:
      type: object
      properties:
        sso:
          $ref: "#/components/schemas/SSO"
        affiliate:
          $ref: "#/components/schemas/AffiliateBasic"
      required:
        - sso
        - affiliate
    ListAffiliateLinksResponse:
      type: object
      properties:
        pagination:
          allOf:
            - $ref: "#/components/schemas/Pagination"
            - properties:
                previous_page:
                  type: number
                  nullable: true
                current_page:
                  type: number
                  example: 1
                next_page:
                  type: number
                  nullable: true
                  example: 2
                count:
                  type: number
                  example: 25
                limit:
                  type: number
                  example: 25
                total_pages:
                  type: number
                  example: 10
                total_count:
                  type: number
                  example: 250
        data:
          type: array
          items:
            $ref: "#/components/schemas/AffiliateLink"
          description: List of affiliate links
      required:
        - pagination
        - data
    CreateAffiliateLinkRequest:
      type: object
      properties:
        affiliate_id:
          type: string
          format: uuid
          description: The ID of the affiliate associated with this link.
          example: f46a912b-08bc-4332-8771-c857e11ad9dd
        token:
          type: string
          description: The unique token for the affiliate link, usually a short identifier.
          example: luke-skywalker
      required:
        - affiliate_id
        - token
    UpdateAffiliateLinkRequest:
      type: object
      properties:
        token:
          type: string
          description: The new unique token for the affiliate link.
          example: darth-vader
    ListAffiliateCouponsResponse:
      type: object
      properties:
        pagination:
          allOf:
            - $ref: "#/components/schemas/Pagination"
            - properties:
                previous_page:
                  type: number
                  nullable: true
                current_page:
                  type: number
                  example: 1
                next_page:
                  type: number
                  nullable: true
                  example: 2
                count:
                  type: number
                  example: 25
                limit:
                  type: number
                  example: 25
                total_pages:
                  type: number
                  example: 10
                total_count:
                  type: number
                  example: 250
        data:
          type: array
          items:
            $ref: "#/components/schemas/AffiliateCoupon"
          description: List of affiliate coupons
      required:
        - pagination
        - data
    CreateAffiliateCouponRequest:
      type: object
      properties:
        affiliate_id:
          type: string
          format: uuid
          description: The ID of the affiliate associated with this coupon.
          example: f46a912b-08bc-4332-8771-c857e11ad9dd
        token:
          type: string
          description: The unique token or code for the affiliate coupon.
          example: MYCODE
      required:
        - affiliate_id
        - token
    ListReferralsResponse:
      type: object
      properties:
        pagination:
          allOf:
            - $ref: "#/components/schemas/Pagination"
            - properties:
                previous_page:
                  type: number
                  nullable: true
                current_page:
                  type: number
                  example: 1
                next_page:
                  type: number
                  nullable: true
                  example: 2
                count:
                  type: number
                  example: 25
                limit:
                  type: number
                  example: 50
                total_pages:
                  type: number
                  example: 10
                total_count:
                  type: number
                  example: 250
        data:
          type: array
          items:
            $ref: "#/components/schemas/Referral"
          description: List of referrals
      required:
        - pagination
        - data
    Commission:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier for the commission.
          example: 39e68c88-d84a-4510-b3b4-43c75016a080
        created_at:
          type: string
          format: date-time
          description: Timestamp when the commission was created.
          example: 2020-08-19T16:28:31.164Z
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the commission was last updated.
          example: 2020-08-19T16:28:31.164Z
        amount:
          type: integer
          description: The amount of the commission in cents.
          example: 3000
        currency:
          type: string
          description: The currency of the commission amount.
          example: USD
        due_at:
          type: string
          nullable: true
          format: date-time
          description: Timestamp when the commission is due.
          example: 2020-09-18T16:28:25.000Z
        paid_at:
          type: string
          nullable: true
          format: date-time
          description: Timestamp when the commission was paid.
        campaign:
          $ref: "#/components/schemas/Campaign"
        sale:
          $ref: "#/components/schemas/Sale"
      required:
        - id
        - created_at
        - updated_at
        - amount
        - currency
        - due_at
        - paid_at
        - campaign
        - sale
    ListCommissionsResponse:
      type: object
      properties:
        pagination:
          allOf:
            - $ref: "#/components/schemas/Pagination"
            - properties:
                previous_page:
                  type: number
                  nullable: true
                current_page:
                  type: number
                  example: 1
                next_page:
                  type: number
                  nullable: true
                  example: 2
                count:
                  type: number
                  example: 25
                limit:
                  type: number
                  example: 50
                total_pages:
                  type: number
                  example: 10
                total_count:
                  type: number
                  example: 250
        data:
          type: array
          items:
            $ref: "#/components/schemas/Commission"
          description: List of commissions
      required:
        - pagination
        - data
    Payout:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier of the payout.
          example: 3b03791a-3fb5-4bd6-8ec3-614c9fd978ca
        currency:
          type: string
          description: The currency of the payout.
          example: USD
        paid_at:
          type: string
          nullable: true
          format: date-time
          description: Timestamp when the payout was marked as paid.
          example: 2022-10-12T14:55:11.242Z
        state:
          type: string
          enum: *a4
          description: The current state of the payout.
          example: paid
        paid_by_id:
          type: string
          nullable: true
          format: uuid
          description: The ID of the user who marked the payout as paid, if applicable.
          example: 3e5c04ae-af80-4964-b280-23df034690d4
        created_at:
          type: string
          format: date-time
          description: Timestamp when the payout was created.
          example: 2022-10-12T14:54:52.148Z
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the payout was last updated.
          example: 2022-10-12T14:55:11.276Z
        amount:
          type: integer
          description: The amount of the payout in cents.
          example: 1470
        affiliate:
          $ref: "#/components/schemas/Affiliate"
        commissions:
          type: array
          items:
            $ref: "#/components/schemas/CommissionItem"
          description: List of commissions included in the payout.
      required:
        - id
        - currency
        - paid_at
        - state
        - paid_by_id
        - created_at
        - updated_at
        - amount
        - affiliate
        - commissions
    UpdateCommissionRequest:
      type: object
      properties:
        paid_at:
          type: string
          nullable: true
          format: date-time
          description: Timestamp to mark the commission as paid. Use null to mark as unpaid.
          example: 2020-08-23T20:37:59.256Z
        due_at:
          type: string
          nullable: true
          format: date-time
          description: Timestamp to set the commission's due date.
          example: 2020-08-23T20:37:59.256Z
    DeleteCommissionResponse:
      type: object
      properties:
        object:
          type: string
          enum:
            - commission
          description: Indicates the object type.
          example: commission
        id:
          type: string
          format: uuid
          description: The unique identifier of the deleted commission.
          example: 39e68c88-d84a-4510-b3b4-43c75016a080
        deleted:
          type: boolean
          description: Indicates if the commission was successfully deleted.
          example: true
      required:
        - object
        - id
        - deleted
    ListPayoutsResponse:
      type: object
      properties:
        pagination:
          allOf:
            - $ref: "#/components/schemas/Pagination"
            - properties:
                previous_page:
                  type: number
                  nullable: true
                current_page:
                  type: number
                  example: 1
                next_page:
                  type: number
                  nullable: true
                  example: 2
                count:
                  type: number
                  example: 25
                limit:
                  type: number
                  example: 50
                total_pages:
                  type: number
                  example: 10
                total_count:
                  type: number
                  example: 250
        data:
          type: array
          items:
            $ref: "#/components/schemas/Payout"
          description: List of payouts
      required:
        - pagination
        - data
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Description of the error.
          example: "Payout not found: 3b03791a-3fb5-4bd6-8ec3-614c9fd978ca"
      required:
        - error
    ListCampaignsResponse:
      type: object
      properties:
        pagination:
          allOf:
            - $ref: "#/components/schemas/Pagination"
            - properties:
                previous_page:
                  type: number
                  nullable: true
                current_page:
                  type: number
                  example: 1
                next_page:
                  type: number
                  nullable: true
                  example: 2
                count:
                  type: number
                  example: 25
                limit:
                  type: number
                  example: 50
                total_pages:
                  type: number
                  example: 10
                total_count:
                  type: number
                  example: 250
        data:
          type: array
          items:
            $ref: "#/components/schemas/Campaign"
          description: List of campaigns
      required:
        - pagination
        - data
    CreateCampaignRequest:
      type: object
      properties:
        name:
          type: string
          description: The campaign's name
          example: My Campaign
        url:
          type: string
          format: uri
          description: Base URL for generating affiliate links
          example: https://example.com
        private:
          type: boolean
          nullable: true
          description: "If true, campaign is invite-only. Default: false"
          example: false
        reward_type:
          type: string
          enum:
            - percent
            - amount
          description: Type of reward - percent or amount
          example: percent
        commission_percent:
          type: number
          description: Commission percentage (required if reward_type is percent)
          example: 20
        commission_amount_cents:
          type: number
          description: Fixed commission amount in cents (required if reward_type is amount)
          example: 1000
        commission_amount_currency:
          type: string
          description: Currency code for fixed commission (required if reward_type is
            amount)
          example: USD
        minimum_payout_cents:
          type: number
          nullable: true
          description: "Minimum cumulative commissions for payout. Default: 0"
          example: 5000
        stripe_coupon_id:
          type: string
          nullable: true
          description: Stripe coupon ID for double-sided incentives (Growth/Enterprise only)
          example: promo_123
      required:
        - name
        - url
        - reward_type
    UpdateCampaignRequest:
      type: object
      properties:
        name:
          type: string
          description: The campaign's name
          example: My Campaign
        url:
          type: string
          format: uri
          description: Base URL for generating affiliate links
          example: https://example.com
        private:
          type: boolean
          nullable: true
          description: If true, campaign is invite-only
          example: false
        reward_type:
          type: string
          enum:
            - percent
            - amount
          description: Type of reward - percent or amount
          example: percent
        commission_percent:
          type: number
          description: Commission percentage (required if reward_type is percent)
          example: 20
        commission_amount_cents:
          type: number
          description: Fixed commission amount in cents (required if reward_type is amount)
          example: 1000
        commission_amount_currency:
          type: string
          description: Currency code for fixed commission (required if reward_type is
            amount)
          example: USD
        minimum_payout_cents:
          type: number
          nullable: true
          description: Minimum cumulative commissions for payout
          example: 5000
        stripe_coupon_id:
          type: string
          nullable: true
          description: Stripe coupon ID for double-sided incentives (Growth/Enterprise only)
          example: promo_123
      required:
        - reward_type
        - commission_percent
        - commission_amount_cents
  parameters: {}
paths:
  /affiliates:
    get:
      description: Retrieve a list of all affiliates with pagination, optional
        expansion, and filtering by campaign or email.
      summary: List all affiliates with filtering
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            enum:
              - campaign
              - links
              - commission_stats
            description: Fields that can be expanded in the response.
            example: campaign
          required: false
          name: expand
          in: query
        - schema:
            type: string
            format: uuid
            description: Filter by campaign ID.
            example: c3482343-8680-40c5-af9a-9efa119713b5
          required: false
          name: campaign_id
          in: query
        - schema:
            type: string
            format: email
            description: Filter by email address.
            example: joe@example.com
          required: false
          name: email
          in: query
      responses:
        "200":
          description: Object containing pagination info and array of Affiliate objects.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAllAffiliatesResponse"
        "401":
          description: Unauthorized - Invalid API key or permissions
    post:
      description: Create a new affiliate in Rewardful
      summary: Create an affiliate
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CreateAffiliateRequest"
      responses:
        "201":
          description: Affiliate created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Affiliate"
        "400":
          description: Bad Request - Invalid input data
        "401":
          description: Unauthorized - Invalid API key or permissions
  /affiliates/{id}:
    get:
      description: Retrieve a single affiliate by its unique ID
      summary: Get an affiliate
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            format: uuid
            example: d0ed8392-8880-4f39-8715-60230f9eceab
          required: true
          name: id
          in: path
      responses:
        "200":
          description: Affiliate object for the specified ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Affiliate"
        "401":
          description: Unauthorized - Invalid API key or permissions
        "404":
          description: Affiliate not found
    put:
      description: Update an existing affiliate in Rewardful
      summary: Update an affiliate
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            format: uuid
            example: d0ed8392-8880-4f39-8715-60230f9eceab
          required: true
          name: id
          in: path
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UpdateAffiliateRequest"
      responses:
        "200":
          description: Affiliate updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Affiliate"
        "400":
          description: Bad Request - Invalid input data
        "401":
          description: Unauthorized - Invalid API key or permissions
        "404":
          description: Affiliate not found
  /affiliates/{id}/sso:
    get:
      description: Generate an SSO link for an affiliate, allowing them to access
        their account
      summary: Generate SSO link for affiliate
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            format: uuid
            description: The unique identifier of the affiliate
            example: d049c0c6-5caf-440e-a774-8d5e87086d0b
          required: true
          name: id
          in: path
      responses:
        "200":
          description: SSO link and affiliate information successfully generated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MagicLinkResponse"
        "401":
          description: Unauthorized - Invalid API key or permissions
        "404":
          description: Affiliate not found
  /affiliate_links:
    get:
      description: Retrieve a list of all affiliate links with pagination
      summary: List all affiliate links
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Object containing pagination info and an array of AffiliateLink
            objects.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAffiliateLinksResponse"
        "401":
          description: Unauthorized - Invalid API key or permissions
    post:
      description: Create a new affiliate link
      summary: Create an affiliate link
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CreateAffiliateLinkRequest"
      responses:
        "201":
          description: Affiliate link created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AffiliateLink"
        "400":
          description: Bad Request - Invalid input data
        "401":
          description: Unauthorized - Invalid API key or permissions
  /affiliate_links/{id}:
    get:
      description: Retrieve a single affiliate link by its unique ID
      summary: Get an affiliate link
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            format: uuid
            description: The unique identifier of the affiliate link
            example: d0ed8392-8880-4f39-8715-60230f9eceab
          required: true
          name: id
          in: path
      responses:
        "200":
          description: AffiliateLink object for the specified ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AffiliateLink"
        "401":
          description: Unauthorized - Invalid API key or permissions
        "404":
          description: Affiliate link not found
    put:
      description: Update an existing affiliate link by its unique ID
      summary: Update an affiliate link
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            format: uuid
            description: The unique identifier of the affiliate link to update.
            example: d0ed8392-8880-4f39-8715-60230f9eceab
          required: true
          name: id
          in: path
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UpdateAffiliateLinkRequest"
      responses:
        "200":
          description: Affiliate link updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AffiliateLink"
        "400":
          description: Bad Request - Invalid input data
        "401":
          description: Unauthorized - Invalid API key or permissions
        "404":
          description: Affiliate link not found
  /affiliate_coupons:
    get:
      description: Retrieve a list of all affiliate coupons with pagination
      summary: List all affiliate coupons
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Object containing pagination info and an array of AffiliateCoupon
            objects.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAffiliateCouponsResponse"
        "401":
          description: Unauthorized - Invalid API key or permissions
    post:
      description: Create a new affiliate coupon
      summary: Create an affiliate coupon
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CreateAffiliateCouponRequest"
      responses:
        "201":
          description: Affiliate coupon created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AffiliateCoupon"
        "400":
          description: Bad Request - Invalid input data
        "401":
          description: Unauthorized - Invalid API key or permissions
  /affiliate_coupons/{id}:
    get:
      description: Retrieve a single affiliate coupon by its unique ID
      summary: Get an affiliate coupon
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            format: uuid
            description: The unique identifier of the affiliate coupon
            example: d0ed8392-8880-4f39-8715-60230f9eceab
          required: true
          name: id
          in: path
      responses:
        "200":
          description: AffiliateCoupon object for the specified ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AffiliateCoupon"
        "401":
          description: Unauthorized - Invalid API key or permissions
        "404":
          description: Affiliate coupon not found
  /referrals:
    get:
      description: Retrieve a list of referrals with optional filtering, expansion,
        and pagination.
      summary: List referrals with filters
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: array
            items:
              type: string
              enum:
                - affiliate
            description: Expand nested affiliate object in the response.
            example:
              - affiliate
          required: false
          name: expand
          in: query
        - schema:
            type: string
            format: uuid
            description: Filter referrals by specific affiliate ID.
            example: b533bfca-7c70-4dec-9691-e136a8d9a26c
          required: false
          name: affiliate_id
          in: query
        - schema:
            type: array
            items:
              type: string
              enum:
                - conversion
                - lead
                - visitor
              description: The state of the referral conversion, either 'conversion', 'lead',
                or 'visitor'.
              example: lead
            description: Filter referrals by conversion state(s). Can include multiple
              values, e.g., 'lead' and 'conversion'.
            example:
              - lead
              - conversion
          required: false
          name: conversion_state
          in: query
        - schema:
            type: number
            description: Page number for pagination.
            example: 3
          required: false
          name: page
          in: query
        - schema:
            type: number
            description: Number of results per page for pagination.
            example: 50
          required: false
          name: limit
          in: query
      responses:
        "200":
          description: Object containing pagination info and an array of Referral objects.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListReferralsResponse"
        "401":
          description: Unauthorized - Invalid API key or permissions
  /commissions:
    get:
      description: Retrieve a list of commissions with optional filtering, expansion,
        and pagination.
      summary: List commissions with filters
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: array
            items:
              type: string
              enum:
                - sale
            description: Expand nested sale object in the response.
            example:
              - sale
          required: false
          name: expand
          in: query
        - schema:
            type: string
            format: uuid
            description: Filter commissions by specific affiliate ID.
            example: b533bfca-7c70-4dec-9691-e136a8d9a26c
          required: false
          name: affiliate_id
          in: query
        - schema:
            type: array
            items:
              type: string
              enum:
                - paid
                - due
                - pending
              description: The state of the commission.
              example: paid
            description: Filter commissions by state(s), e.g., 'paid', 'due', or 'pending'.
            example:
              - due
              - pending
          required: false
          name: state
          in: query
        - schema:
            type: number
            description: Page number for pagination.
            example: 3
          required: false
          name: page
          in: query
        - schema:
            type: number
            description: Number of results per page for pagination.
            example: 50
          required: false
          name: limit
          in: query
      responses:
        "200":
          description: Object containing pagination info and an array of Commission objects.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCommissionsResponse"
        "401":
          description: Unauthorized - Invalid API key or permissions
  /commissions/{id}:
    get:
      description: Retrieve a single commission by its unique ID
      summary: Get a commission
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            format: uuid
            description: The unique identifier of the commission
            example: 39e68c88-d84a-4510-b3b4-43c75016a080
          required: true
          name: id
          in: path
      responses:
        "200":
          description: Commission object for the specified ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Commission"
        "401":
          description: Unauthorized - Invalid API key or permissions
        "404":
          description: Commission not found
    put:
      description: Update a commission's paid or due date status.
      summary: Update commission
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            format: uuid
            description: The unique identifier of the commission to update.
            example: 01342824-914a-4aee-9f42-de823a8b74e2
          required: true
          name: id
          in: path
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UpdateCommissionRequest"
      responses:
        "200":
          description: Commission object with updated status.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Commission"
        "400":
          description: Bad Request - Invalid input data.
        "401":
          description: Unauthorized - Invalid API key or permissions.
        "404":
          description: Commission not found.
    delete:
      description: Delete a commission by its unique ID
      summary: Delete commission
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            format: uuid
            description: The unique identifier of the commission to delete.
            example: 39e68c88-d84a-4510-b3b4-43c75016a080
          required: true
          name: id
          in: path
      responses:
        "200":
          description: Confirmation that the commission was deleted.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteCommissionResponse"
        "401":
          description: Unauthorized - Invalid API key or permissions.
        "404":
          description: Commission not found.
  /payouts/{id}/pay:
    put:
      description: Mark a payout as paid. This queues the payout for processing.
      summary: Mark payout as paid
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            format: uuid
            description: The unique identifier of the payout to mark as paid.
            example: 3b03791a-3fb5-4bd6-8ec3-614c9fd978ca
          required: true
          name: id
          in: path
      responses:
        "200":
          description: Payout object with updated state, typically set to 'processing'.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payout"
        "401":
          description: Unauthorized - Invalid API key or permissions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message describing the authentication failure.
                    example: Invalid API Secret.
                required:
                  - error
        "404":
          description: Payout not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating the payout was not found.
                    example: "Payout not found: 3b03791a-3fb5-4bd6-8ec3-614c9fd978ca"
                required:
                  - error
  /payouts:
    get:
      description: Retrieve a list of payouts with optional filtering, expansion, and
        pagination.
      summary: List payouts with filters
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: array
            items:
              type: string
              enum:
                - affiliate
                - commissions
            description: Expand nested affiliate and/or commissions data in the response.
            example:
              - affiliate
              - commissions
          required: false
          name: expand
          in: query
        - schema:
            type: string
            format: uuid
            description: Filter payouts by specific affiliate ID.
            example: 5768bd90-7953-493f-ae6c-6562eb4d7e72
          required: false
          name: affiliate_id
          in: query
        - schema:
            type: array
            items:
              type: string
              enum:
                - paid
                - processing
                - due
                - pending
                - completed
                - failed
              description: The state of the payout.
              example: paid
            description: Filter payouts by state(s), such as 'paid', 'due', or 'pending'.
            example:
              - due
              - pending
          required: false
          name: state
          in: query
        - schema:
            type: number
            description: Page number for pagination.
            example: 3
          required: false
          name: page
          in: query
        - schema:
            type: number
            description: Number of results per page for pagination.
            example: 50
          required: false
          name: limit
          in: query
      responses:
        "200":
          description: Object containing pagination info and an array of Payout objects.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPayoutsResponse"
        "401":
          description: Unauthorized - Invalid API key or permissions.
  /payouts/{id}:
    get:
      description: Retrieve a single payout by its unique ID
      summary: Get a payout
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            format: uuid
            description: The unique identifier of the payout
            example: 3b03791a-3fb5-4bd6-8ec3-614c9fd978ca
          required: true
          name: id
          in: path
      responses:
        "200":
          description: Payout object for the specified ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payout"
        "401":
          description: Unauthorized - Invalid API key or permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Payout not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /campaigns:
    get:
      description: Retrieve a list of all campaigns with pagination.
      summary: List campaigns
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Object containing pagination info and an array of Campaign objects.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCampaignsResponse"
        "401":
          description: Unauthorized - Invalid API key or permissions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message describing the authentication failure.
                    example: Invalid API Secret.
                required:
                  - error
    post:
      description: Create a new campaign with specified attributes.
      summary: Create campaign
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CreateCampaignRequest"
      responses:
        "201":
          description: The newly created Campaign object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Campaign"
        "400":
          description: Bad Request - Invalid input data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message describing the issue with the input.
                    example: Invalid input data.
                required:
                  - error
        "401":
          description: Unauthorized - Invalid API key or permissions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message describing the authentication failure.
                    example: Invalid API Secret.
                required:
                  - error
        "422":
          description: Unprocessable Entity - Invalid input data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message describing the issue with the input.
                    example: Invalid input data.
                required:
                  - error
  /campaigns/{id}:
    put:
      description: Update a specific campaign by its unique ID.
      summary: Update campaign
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            format: uuid
            description: The unique identifier of the campaign to update.
            example: ceaef6d9-767e-49aa-a6ab-46c02aa79604
          required: true
          name: id
          in: path
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UpdateCampaignRequest"
      responses:
        "200":
          description: The updated Campaign object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Campaign"
        "400":
          description: Bad Request - Invalid input data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message describing the issue with the input.
                    example: Invalid input data.
                required:
                  - error
        "401":
          description: Unauthorized - Invalid API key or permissions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message describing the authentication failure.
                    example: Invalid API Secret.
                required:
                  - error
        "404":
          description: Campaign not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating the campaign was not found.
                    example: "Campaign not found: ceaef6d9-767e-49aa-a6ab-46c02aa79604"
                required:
                  - error
    get:
      description: Retrieve a single campaign by its unique ID.
      summary: Get a campaign
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            format: uuid
            description: The unique identifier of the campaign to retrieve.
            example: ceaef6d9-767e-49aa-a6ab-46c02aa79604
          required: true
          name: id
          in: path
      responses:
        "200":
          description: Campaign object for the specified ID.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Campaign"
        "401":
          description: Unauthorized - Invalid API key or permissions.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - properties:
                      error:
                        type: string
                        description: Description of the error.
                        example: "Campaign not found: ceaef6d9-767e-49aa-a6ab-46c02aa79604"
        "404":
          description: Campaign not found.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ErrorResponse"
                  - properties:
                      error:
                        type: string
                        description: Description of the error.
                        example: "Campaign not found: ceaef6d9-767e-49aa-a6ab-46c02aa79604"
